{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/chatroom/chatroom.component.html","webpack:///./src/app/forgot-password/forgot-password.component.html","webpack:///./src/app/header/header.component.html","webpack:///./src/app/joinchat/joinchat.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/register/register.component.html","webpack:///./src/app/reset-password/reset-password.component.html","webpack:///./src/app/verify-account/verify-account.component.html","webpack:///./src/app/api.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/chat.service.ts","webpack:///./src/app/chatroom.guard.ts","webpack:///./src/app/chatroom/chatroom.component.scss","webpack:///./src/app/chatroom/chatroom.component.ts","webpack:///./src/app/forgot-password/forgot-password.component.scss","webpack:///./src/app/forgot-password/forgot-password.component.ts","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/joinchat/joinchat.component.scss","webpack:///./src/app/joinchat/joinchat.component.ts","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/profile/profile.component.scss","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/recent-date.pipe.ts","webpack:///./src/app/register/register.component.scss","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/reset-password/reset-password.component.scss","webpack:///./src/app/reset-password/reset-password.component.ts","webpack:///./src/app/socket.service.ts","webpack:///./src/app/verify-account/verify-account.component.scss","webpack:///./src/app/verify-account/verify-account.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\n  <app-header></app-header>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n  <h1>\\n    Chat Box\\n    <!-- <a class=\\\"btn btn-primary\\\" (click)=\\\"logout()\\\" >Logout</a> -->\\n  </h1>\\n  <div>\\n    <!-- <span class=\\\"new-day\\\">Aug 13, 2019</span> -->\\n    <div #scrollbox [scrollTop]=\\\"scrollbox.scrollHeight\\\" class=\\\"d-flex flex-column scrollable\\\">\\n      <ng-container *ngFor=\\\"let message of messages\\\" >\\n        <span *ngIf=\\\"message.datechange\\\" class=\\\"new-day\\\">{{message.datechange | date: 'mediumDate' | recentDate}}</span>\\n        <p *ngIf=\\\"message.joined\\\" class=\\\"text-success\\\">{{message.joined}}</p>\\n        <p *ngIf=\\\"message.left\\\" class=\\\"text-danger\\\">{{message.left}}</p>\\n        <p *ngIf=\\\"message.username\\\" [ngClass]=\\\"message.username === user.username ? 'current-user' : 'other-user'\\\">\\n          <strong class=\\\"d-block\\\" *ngIf=\\\"message.username !== user.username\\\">{{message.username | uppercase}}</strong>\\n          <span [innerHTML]=\\\"message.msg\\\"></span>\\n          <span class=\\\"message-date\\\">{{message.date | date: 'shortTime'}}</span>\\n        </p>\\n      </ng-container>\\n    </div>\\n    <form [formGroup]=\\\"messageForm\\\" class=\\\"align-self-end\\\" (ngSubmit)=\\\"sendMessage()\\\">\\n      <div class=\\\"form-group\\\">\\n        <input formControlName=\\\"message\\\" class=\\\"form-control\\\" type=\\\"text\\\" autofocus placeholder=\\\"Enter message\\\">\\n        <button class=\\\"btn btn-primary\\\" [disabled]=\\\"loading || checkValid()\\\">Send</button>\\n        <button class=\\\"btn btn-warning\\\" [disabled]=\\\"loading\\\" type=\\\"button\\\" (click)=\\\"sendLocation()\\\">Share Location</button>\\n      </div>\\n    </form>\\n  </div>\\n\"","module.exports = \"<div class=\\\"container-fluid view-area\\\">\\n  <div class=\\\"row mt-4\\\">\\n    <div class=\\\"col-md-6 m-auto\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header bg-primary text-light\\\">\\n          Forgot Password\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form [formGroup]=\\\"forgotForm\\\" (ngSubmit)=\\\"sendMail()\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Email</label>\\n              <input class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': isInvalid('email')}\\\"\\n                formControlName=\\\"email\\\" placeholder=\\\"Your Login Email\\\" autocomplete=\\\"email\\\">\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid('email')\\\">\\n                {{getErrors('email')}}\\n              </div>\\n            </div>\\n            <div>\\n              <button type=\\\"submit\\\" [disabled]=\\\"loader\\\" class=\\\"btn btn-primary d-inline-block\\\"> <span\\n                  class=\\\"spinner-border spinner-border-sm\\\" *ngIf=\\\"loader\\\" role=\\\"status\\\">\\n                  <span class=\\\"sr-only\\\">Loading...</span>\\n                </span> Submit</button>\\n            </div>\\n            <div class=\\\"invalid-feedback mt-3 d-block\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<nav class=\\\"navbar navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\">Navbar</a>\\n    <button class=\\\"btn btn-primary\\\" *ngIf=\\\"isLoggedIn()\\\" (click)=\\\"logout()\\\">Logout</button>\\n  </nav>\\n\"","module.exports = \"<alert type=\\\"danger\\\" [isOpen]=\\\"error\\\" [dismissOnTimeout]=\\\"errTimeout\\\">\\n  <span [innerHtml]=\\\"errMsg\\\"></span>\\n</alert>\\n<div class=\\\"row\\\">\\n  <form class=\\\"col-md-6 mx-auto mt-5 joinbox\\\" [formGroup]=\\\"joinFormGroup\\\" (ngSubmit)=\\\"joinRoom()\\\">\\n    <h2>Join Chat</h2>\\n    <p>Hi <strong>{{username}}</strong>!</p>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"room\\\">Room</label>\\n      <select id=\\\"room\\\" formControlName=\\\"room\\\"\\n        [ngClass]=\\\"{'is-invalid': joinFormGroup.get('room').invalid && joinFormGroup.get('room').dirty}\\\">\\n        <option value=\\\"one\\\">One</option>\\n        <option value=\\\"two\\\">Two</option>\\n        <option value=\\\"three\\\">Three</option>\\n      </select>\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"joinFormGroup.get('room').invalid && joinFormGroup.get('room').dirty\\\">\\n        {{getErrors('room')}}\\n      </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n  </form>\\n</div>\\n\"","module.exports = \"<alert type=\\\"danger\\\" [isOpen]=\\\"error\\\" [dismissOnTimeout]=\\\"errTimeout\\\">\\n  <span>{{errMsg}}</span>\\n</alert>\\n<div class=\\\"container-fluid view-area\\\">\\n  <div class=\\\"row mt-4\\\">\\n    <div class=\\\"col-md-6 m-auto\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header bg-primary text-light\\\">\\n          Login\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Email</label>\\n              <input class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': getInvalidCondition('email')}\\\"\\n                formControlName=\\\"email\\\" placeholder=\\\"Your Login Email\\\" autocomplete=\\\"email\\\">\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"getInvalidCondition('email')\\\">\\n                {{getErrors('email')}}\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>Password</label>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"password\\\"\\n                [ngClass]=\\\"{'is-invalid': getInvalidCondition('password')}\\\" formControlName=\\\"password\\\"\\n                placeholder=\\\"Password\\\">\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"getInvalidCondition('password')\\\">\\n                {{getErrors('password')}}\\n              </div>\\n            </div>\\n            <div>\\n              <div class=\\\"btn-group\\\" role=\\\"login\\\" aria-label=\\\"Login Register\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"loader\\\" class=\\\"btn btn-primary d-inline-block\\\"> <span class=\\\"spinner-border spinner-border-sm\\\" *ngIf=\\\"loader\\\" role=\\\"status\\\">\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\n                  </span> Login</button>\\n                <button type=\\\"button\\\" [disabled]=\\\"loader\\\" [routerLink]=\\\"['/register']\\\"\\n                  class=\\\"btn btn-outline-primary d-inline-block ml-1\\\">Sign Up</button>\\n              </div>\\n              <a class=\\\"float-right\\\" [routerLink]=\\\"['/forgot-password']\\\">Forgot Password?</a>\\n            </div>\\n            <div class=\\\"invalid-feedback mt-3 d-block\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"container-fluid view-area\\\">\\n  <div class=\\\"row mt-4\\\">\\n    <div class=\\\"col-md-6 m-auto\\\">\\n        <div class=\\\"card\\\">\\n        <div class=\\\"card-header bg-primary text-light\\\">\\n          Update Profile\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"updateProfile()\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Username (<span class=\\\"text-danger\\\">*</span>)</label>\\n              <input class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': getInvalidCondition('username'), 'is-valid': profileForm.get('username').valid}\\\" formControlName=\\\"username\\\" placeholder=\\\"Your Username\\\" autocomplete=\\\"off\\\">\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"getInvalidCondition('username')\\\">\\n                {{getErrors('username')}}\\n              </div>\\n              <div class=\\\"valid-feedback d-block\\\" *ngIf=\\\"profileForm.get('username').valid\\\">\\n                Username Present\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>First Name (<span class=\\\"text-danger\\\">*</span>)</label>\\n              <input class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': getInvalidCondition('firstName')}\\\" formControlName=\\\"firstName\\\" placeholder=\\\"Your First Name\\\" autocomplete=\\\"firstName\\\">\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"getInvalidCondition('firstName')\\\">\\n                {{getErrors('firstName')}}\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>Last Name</label>\\n              <input class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': getInvalidCondition('lastName')}\\\" formControlName=\\\"lastName\\\" placeholder=\\\"Your Last Name\\\" autocomplete=\\\"lastName\\\">\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"getInvalidCondition('lastName')\\\">\\n                {{getErrors('lastName')}}\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>Email (<span class=\\\"text-danger\\\">*</span>)</label>\\n              <input class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': getInvalidCondition('email')}\\\" formControlName=\\\"email\\\" placeholder=\\\"Your Email\\\" autocomplete=\\\"email\\\">\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"getInvalidCondition('email')\\\">\\n                {{getErrors('email')}}\\n              </div>\\n            </div>\\n            <!-- <div class=\\\"form-group\\\">\\n              <label>Password (<span class=\\\"text-danger\\\">*</span>)</label>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': getInvalidCondition('password')}\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"getInvalidCondition('password')\\\">\\n                {{getErrors('password')}}\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label>Confirm Password (<span class=\\\"text-danger\\\">*</span>)</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': getInvalidCondition('confirmPassword')}\\\" formControlName=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\">\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"getInvalidCondition('confirmPassword')\\\">\\n                {{getErrors('confirmPassword')}}\\n              </div>\\n            </div> -->\\n            <div>\\n              <button type=\\\"submit\\\" [disabled]=\\\"loader\\\" class=\\\"btn btn-primary d-inline-block\\\">\\n                  <span class=\\\"spinner-border spinner-border-sm\\\" *ngIf=\\\"loader\\\" role=\\\"status\\\">\\n                      <span class=\\\"sr-only\\\">Loading...</span>\\n                    </span>Update Profile</button>\\n            </div>\\n            <div class=\\\"invalid-feedback mt-3 d-block\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"container-fluid view-area\\\">\\n    <div class=\\\"row mt-4\\\">\\n      <div class=\\\"col-md-4 m-auto\\\">\\n          <div class=\\\"card\\\">\\n          <div class=\\\"card-header bg-primary text-light\\\">\\n            Register\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>First Name (<span class=\\\"text-danger\\\">*</span>)</label>\\n                <input class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': getInvalidCondition('firstName')}\\\" formControlName=\\\"firstName\\\" placeholder=\\\"Your First Name\\\" autocomplete=\\\"firstName\\\">\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"getInvalidCondition('firstName')\\\">\\n                  {{getErrors('firstName')}}\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Last Name</label>\\n                <input class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': getInvalidCondition('lastName')}\\\" formControlName=\\\"lastName\\\" placeholder=\\\"Your Last Name\\\" autocomplete=\\\"lastName\\\">\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"getInvalidCondition('lastName')\\\">\\n                  {{getErrors('lastName')}}\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Email (<span class=\\\"text-danger\\\">*</span>)</label>\\n                <input class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': getInvalidCondition('email')}\\\" formControlName=\\\"email\\\" placeholder=\\\"Your Email\\\" autocomplete=\\\"email\\\">\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"getInvalidCondition('email')\\\">\\n                  {{getErrors('email')}}\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Password (<span class=\\\"text-danger\\\">*</span>)</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': getInvalidCondition('password')}\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"getInvalidCondition('password')\\\">\\n                  {{getErrors('password')}}\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Confirm Password (<span class=\\\"text-danger\\\">*</span>)</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': getInvalidCondition('confirmPassword')}\\\" formControlName=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\">\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"getInvalidCondition('confirmPassword')\\\">\\n                  {{getErrors('confirmPassword')}}\\n                </div>\\n              </div>\\n              <div>\\n                <button type=\\\"submit\\\" [disabled]=\\\"loader\\\" class=\\\"btn btn-primary d-inline-block\\\">\\n                    <span class=\\\"spinner-border spinner-border-sm\\\" *ngIf=\\\"loader\\\" role=\\\"status\\\">\\n                        <span class=\\\"sr-only\\\">Loading...</span>\\n                      </span> Register</button>\\n                <button type=\\\"button\\\" [disabled]=\\\"loader\\\" [routerLink]=\\\"['/']\\\" class=\\\"btn btn-outline-success d-inline-block ml-1\\\">Already a User ? Login</button>\\n              </div>\\n              <div class=\\\"invalid-feedback mt-3 d-block\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\"","module.exports = \"<div class=\\\"row mt-4\\\">\\n  <div class=\\\"col-md-6 offset-md-3 col-sm-10 offset-sm-1\\\">\\n    <div class=\\\"card mx-auto w-75\\\">\\n      <div class=\\\"card-header bg-primary text-light\\\">Reset Password\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"resetPasswordForm\\\" (ngSubmit)=\\\"resetPassword()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Password<span class=\\\"text-danger\\\">*</span></label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\"\\n              [ngClass]=\\\"{'is-invalid': isInvalid('password')}\\\" formControlName=\\\"password\\\"\\n              placeholder=\\\"Enter Password\\\">\\n            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid('password')\\\">{{getErrors('password')}}\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Confirm Password<span class=\\\"text-danger\\\">*</span></label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': isInvalid('confirmPassword')}\\\"\\n              formControlName=\\\"confirmPassword\\\" placeholder=\\\"Enter Confirm Password\\\">\\n            <div class=\\\"invalid-feedback\\\" *ngIf=\\\"isInvalid('confirmPassword')\\\"\\n              >{{getErrors('confirmPassword')}}\\n            </div>\\n          </div>\\n          <div class=\\\"spinner-border text-primary\\\" *ngIf=\\\"loader\\\" role=\\\"status\\\">\\n            <span class=\\\"sr-only\\\">Loading...</span>\\n          </div>\\n          <button type=\\\"submit\\\" *ngIf=\\\"!loader\\\" class=\\\"btn btn-outline-primary d-inline-block\\\">Submit</button>\\n          <div class=\\\"invalid-feedback mt-3 d-block\\\" *ngIf=\\\"errorMessage\\\" [ngClass]=\\\"{'text-success': success}\\\">{{errorMessage}}</div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"container-fluid view-area\\\">\\n  <div class=\\\"row mt-4\\\">\\n    <div class=\\\"m-auto\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header bg-primary text-light\\\">\\n          Verify Your Account\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"text-success d-block\\\" *ngIf=\\\"successMsg\\\">{{successMsg}}</div>\\n          <form [formGroup]=\\\"verifyForm\\\" (ngSubmit)=\\\"verifyOtp()\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Enter OTP</label>\\n              <input class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': getInvalidCondition('otp')}\\\"\\n                formControlName=\\\"otp\\\" placeholder=\\\"e.g. 123456\\\" autocomplete=\\\"otp\\\">\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"getInvalidCondition('otp')\\\">\\n                {{getErrors('otp')}}\\n              </div>\\n            </div>\\n            <div>\\n              <div class=\\\"spinner-border text-primary\\\" *ngIf=\\\"loader\\\" role=\\\"status\\\">\\n                <span class=\\\"sr-only\\\">Loading...</span>\\n              </div>\\n              <button type=\\\"submit\\\" [disabled]=\\\"!otpSent\\\" class=\\\"btn btn-primary d-inline-block\\\">Verify</button>\\n              <button type=\\\"button\\\" #resendButton class=\\\"btn btn-outline-success float-right\\\" [disabled]=\\\"!isResend\\\" (click)=\\\"sendOtp()\\\">Resend\\n                <ng-container *ngIf=\\\"resendTime !== null\\\">\\n                  in {{resendTime | date: 'mm:ss'}}\\n                </ng-container>\\n              </button>\\n            </div>\\n            <div class=\\\"invalid-feedback mt-3 d-block\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { ChatService } from './chat.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\nimport { environment } from '../environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private apiUrl = environment.socketUrl;\n\n  constructor(private httpClient: HttpClient, private router: Router, private chatService: ChatService) { }\n\n  login(loginInput: any): Observable<any> {\n    const loginUrl = this.apiUrl + '/user/authenticate';\n    return this.httpClient.post<any>(loginUrl, loginInput);\n  }\n\n  logout() {\n    this.chatService.clearUser();\n    this.router.navigate(['/']);\n  }\n\n  register(registerInput: any): Observable<any> {\n    const registerUrl = this.apiUrl + '/user/register';\n    return this.httpClient.post<any>(registerUrl, registerInput);\n  }\n\n  forgotPass(email: string): Observable<any> {\n    const forgotUrl = this.apiUrl + '/user/forgot-password';\n    return this.httpClient.post<any>(forgotUrl, {email, baseUrl: environment.baseUrl});\n  }\n\n  addXToken() {\n    return new HttpHeaders({\n      'x-access-token': this.chatService.getFromLocal('token')\n    });\n  }\n\n  sendOtp(): Observable<any> {\n    const verifyUrl = this.apiUrl + '/user/send-otp';\n    const headers = this.addXToken();\n    const email = this.chatService.getUserInfo().email;\n    return this.httpClient.post<any>(verifyUrl, {email}, { headers });\n  }\n\n  confirmOtp(otpInput: any): Observable<any> {\n    const confirmOtpUrl = this.apiUrl + '/user/confirm-otp';\n    const headers = this.addXToken();\n    return this.httpClient.post<any>(confirmOtpUrl, otpInput, { headers });\n  }\n\n  checkIfUserExists(userString: string) {\n    const checkUserUrl = this.apiUrl + '/user/check-username';\n    const params = new HttpParams().set('userinput', userString).set('email', this.chatService.getUserInfo().email);\n    const headers = this.addXToken();\n    return this.httpClient.get<any>(checkUserUrl, { headers, params });\n  }\n\n  getUserDetails() {\n    const getUserDetailsUrl = this.apiUrl + '/user/user-details';\n    const params = new HttpParams().set('email', this.chatService.getUserInfo().email);\n    const headers = this.addXToken();\n    return this.httpClient.get<any>(getUserDetailsUrl, { headers, params });\n  }\n\n  updateProfile(userInfo) {\n    const updateProfileUrl = this.apiUrl + '/user/update-profile';\n    userInfo.email = this.chatService.getUserInfo().email;\n    const headers = this.addXToken();\n    return this.httpClient.patch<any>(updateProfileUrl, userInfo, { headers });\n  }\n}\n","import { JoinchatComponent } from './joinchat/joinchat.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChatroomComponent } from './chatroom/chatroom.component';\nimport { ChatroomGuard } from './chatroom.guard';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { VerifyAccountComponent } from './verify-account/verify-account.component';\nimport { AuthGuard } from './auth.guard';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\nconst routes: Routes = [\n  {path: '', component: LoginComponent, canActivate: [AuthGuard], data: {checkloggedIn: true}},\n  {path: 'register', component: RegisterComponent, canActivate: [AuthGuard], data: {checkloggedIn: true}},\n  {path: 'forgot-password', component: ForgotPasswordComponent, canActivate: [AuthGuard], data: {checkloggedIn: true}},\n  {path: 'reset-password', component: ResetPasswordComponent, canActivate: [AuthGuard], data: {checkloggedIn: true}},\n  {path: 'verify', component: VerifyAccountComponent, canActivate: [AuthGuard], data: {checkVerified: true}},\n  {path: 'update-profile', component: ProfileComponent, canActivate: [AuthGuard]},\n  {path: 'join', component: JoinchatComponent, canActivate: [AuthGuard], data: {checkjoin: true, checkUsername: true}},\n  {path: 'chat', component: ChatroomComponent, canActivate: [AuthGuard, ChatroomGuard], data: {checkjoin: true, checkUsername: true}},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { setTheme } from 'ngx-bootstrap/utils';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  constructor() {\n    setTheme('bs4');\n  }\n  ngOnInit() {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { ChatroomComponent } from './chatroom/chatroom.component';\nimport { JoinchatComponent } from './joinchat/joinchat.component';\nimport { RecentDatePipe } from './recent-date.pipe';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { VerifyAccountComponent } from './verify-account/verify-account.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatroomComponent,\n    JoinchatComponent,\n    RecentDatePipe,\n    RegisterComponent,\n    LoginComponent,\n    VerifyAccountComponent,\n    HeaderComponent,\n    ProfileComponent,\n    ForgotPasswordComponent,\n    ResetPasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule, ReactiveFormsModule,\n    HttpClientModule,\n    AlertModule.forRoot(),\n    ButtonsModule.forRoot(),\n    ModalModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ChatService } from './chat.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private chatService: ChatService, private router: Router) {\n\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const loggedIn = this.chatService.isLoggedIn();\n    if (loggedIn) {\n      if (next.data.checkVerified) {\n        const isVerified = this.chatService.getUserInfo().isVerified;\n        if (isVerified) { return this.router.parseUrl('/join'); }\n      }\n      if (next.data.checkjoin) {\n        const isVerified = this.chatService.getUserInfo().isVerified;\n        if (!isVerified) { return this.router.parseUrl('/verify'); }\n      }\n      if (next.data.checkUsername) {\n        const username = this.chatService.getUserInfo().username;\n        if (username === '') { return this.router.parseUrl('/update-profile'); }\n      }\n      if (next.data.checkloggedIn) {\n        return this.router.parseUrl('/join');\n      }\n      return true;\n    } else {\n      if (next.data.checkloggedIn) {\n        return true;\n      }\n      return this.router.parseUrl('/');\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup, ValidatorFn } from '@angular/forms';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  private errMsgSub = new Subject<string>();\n\n  constructor() {}\n\n  isLoggedIn() {\n    return this.getUserInfo() ? this.getUserInfo() : false;\n  }\n\n  clearUser() {\n    localStorage.removeItem('user');\n  }\n\n  setInLocal(key: string, val: any) {\n    localStorage.setItem(key, JSON.stringify(val));\n  }\n\n  getFromLocal(key: string, json = true): any {\n    let item = localStorage.getItem(key);\n    if (json && item) {\n      item = JSON.parse(item);\n    }\n    return item;\n  }\n\n  getUserInfo(socketUser = false) {\n    if (socketUser) {\n      return this.getFromLocal('sUser');\n    }\n    return this.getFromLocal('user');\n  }\n\n  setUserInfo(val, socketUser = false) {\n    if (socketUser) {\n      return this.setInLocal('sUser', val);\n    }\n    return this.setInLocal('user', val);\n  }\n\n  setErrorMsg(val: string) {\n    this.errMsgSub.next(val);\n    // return this.setInLocal('error', val);\n  }\n\n  setRouteErrorMsg(val: string) {\n    return this.setInLocal('error', val);\n  }\n\n  getErrorMsg(): Observable<any> {\n    return this.errMsgSub.asObservable();\n    /* const error = this.getFromLocal('error', false);\n    localStorage.removeItem('error');\n    return error; */\n  }\n\n  getRouteErrorMsg() {\n    const error = this.getFromLocal('error', false);\n    localStorage.removeItem('error');\n    return error;\n  }\n\n  getErrors(formControl: string, formGroup, validations): string {\n    const errorField = validations[formControl];\n\n    for (const i in errorField) {\n      if (formGroup.get(formControl).hasError(errorField[i].type)) {\n        return errorField[i].message;\n      }\n    }\n  }\n\n  isInvalid(formgroup: FormGroup, formControl: string) {\n    return (\n      formgroup.get(formControl).invalid &&\n      formgroup.get(formControl).dirty\n    );\n  }\n\n  markFieldsAsDirty(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(formControl => {\n      const control = formGroup.get(formControl);\n      control.markAsDirty({ onlySelf: true });\n    });\n  }\n\n  mustMatch(controlName: string, matchingControlName: string): ValidatorFn {\n    return (formGroup: FormGroup): ValidatorFn => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n        // return if another validator has already found an error on the matchingControl\n        return;\n      }\n\n      // set error on matchingControl if validation fails\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({ mustMatch: true });\n      } else {\n        matchingControl.setErrors(null);\n      }\n    };\n  }\n\n  showResponseError(error) {\n    if (error.status === 422 && error.error.errors) {\n      let msg = '';\n      const errors = error.error.errors;\n      for (let i = 0; i < errors.length; i++) {\n        const element = errors[i];\n        msg += element.msg;\n        if (i !== errors.length - 1) {\n          msg += '. ';\n        }\n      }\n      return msg;\n    } else if (error.error.message === undefined) {\n      return error.status + ' - ' + error.statusText;\n    } else {\n      return error.error.message;\n    }\n  }\n\n}\n","import { SocketService } from './socket.service';\nimport { ChatService } from './chat.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatroomGuard implements CanActivate {\n\n  constructor(private chatService: ChatService, private router: Router, private socketService: SocketService) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const hasUser =  this.chatService.getUserInfo();\n    const isLoggedIn = this.socketService.loggedIn();\n    // console.log('hasUser');\n    if (hasUser && isLoggedIn) {\n      return true;\n    }\n    this.chatService.setRouteErrorMsg('You need to login First!');\n    return this.router.parseUrl('/');\n  }\n\n}\n","module.exports = \".other-user {\\n  background: #4f85b5a6;\\n}\\n\\n.current-user {\\n  background: #80808085;\\n  align-self: flex-end;\\n}\\n\\n.current-user, .other-user {\\n  padding: 20px 20px;\\n  border-radius: 5px;\\n  display: inline-block;\\n  width: 25%;\\n  position: relative;\\n}\\n\\n.scrollable {\\n  min-height: 470px;\\n  max-height: 470px;\\n  overflow: scroll;\\n}\\n\\n.message-date {\\n  position: absolute;\\n  bottom: 5px;\\n  right: 5px;\\n  font-size: 0.7rem;\\n}\\n\\n.new-day {\\n  text-align: center;\\n}\\n\\n.new-day::before, .new-day::after {\\n  content: \\\"\\\";\\n  height: 1px;\\n  display: inline-block;\\n  width: 40%;\\n  background-color: rgba(0, 0, 0, 0.7);\\n  margin: 0 1%;\\n  vertical-align: middle;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy91bWVzaGNoYXVoYW4vRG9jdW1lbnRzL25vZGVzYW5kYm94L2FuZ3VsYXItc29ja2V0L3NyYy9hcHAvY2hhdHJvb20vY2hhdHJvb20uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NoYXRyb29tL2NoYXRyb29tLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQVkscUJBQUE7QUNFWjs7QUREQTtFQUFjLHFCQUFBO0VBQXVCLG9CQUFBO0FDTXJDOztBRExBO0VBQTJCLGtCQUFBO0VBQW9CLGtCQUFBO0VBQW9CLHFCQUFBO0VBQXVCLFVBQUE7RUFBWSxrQkFBQTtBQ2F0Rzs7QURaQTtFQUFZLGlCQUFBO0VBQWtCLGlCQUFBO0VBQWtCLGdCQUFBO0FDa0JoRDs7QURqQkE7RUFBYyxrQkFBQTtFQUFvQixXQUFBO0VBQWEsVUFBQTtFQUFZLGlCQUFBO0FDd0IzRDs7QUR2QkE7RUFBUyxrQkFBQTtBQzJCVDs7QUQxQkE7RUFBa0MsV0FBQTtFQUFhLFdBQUE7RUFBYSxxQkFBQTtFQUF1QixVQUFBO0VBQVksb0NBQUE7RUFBc0MsWUFBQTtFQUFjLHNCQUFBO0FDb0NuSiIsImZpbGUiOiJzcmMvYXBwL2NoYXRyb29tL2NoYXRyb29tLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm90aGVyLXVzZXJ7YmFja2dyb3VuZDogIzRmODViNWE2O31cbi5jdXJyZW50LXVzZXJ7YmFja2dyb3VuZDogIzgwODA4MDg1OyBhbGlnbi1zZWxmOiBmbGV4LWVuZH1cbi5jdXJyZW50LXVzZXIsIC5vdGhlci11c2Vye3BhZGRpbmc6IDIwcHggMjBweDsgYm9yZGVyLXJhZGl1czogNXB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHdpZHRoOiAyNSU7IHBvc2l0aW9uOiByZWxhdGl2ZX1cbi5zY3JvbGxhYmxle21pbi1oZWlnaHQ6IDQ3MHB4O21heC1oZWlnaHQ6IDQ3MHB4O292ZXJmbG93OiBzY3JvbGx9XG4ubWVzc2FnZS1kYXRle3Bvc2l0aW9uOiBhYnNvbHV0ZTsgYm90dG9tOiA1cHg7IHJpZ2h0OiA1cHg7IGZvbnQtc2l6ZTogMC43cmVtO31cbi5uZXctZGF5e3RleHQtYWxpZ246IGNlbnRlcjt9XG4ubmV3LWRheTo6YmVmb3JlLCAubmV3LWRheTo6YWZ0ZXJ7Y29udGVudDogXCJcIjsgaGVpZ2h0OiAxcHg7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgd2lkdGg6IDQwJTsgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpOyBtYXJnaW46IDAgMSU7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7fVxuIiwiLm90aGVyLXVzZXIge1xuICBiYWNrZ3JvdW5kOiAjNGY4NWI1YTY7XG59XG5cbi5jdXJyZW50LXVzZXIge1xuICBiYWNrZ3JvdW5kOiAjODA4MDgwODU7XG4gIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xufVxuXG4uY3VycmVudC11c2VyLCAub3RoZXItdXNlciB7XG4gIHBhZGRpbmc6IDIwcHggMjBweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAyNSU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnNjcm9sbGFibGUge1xuICBtaW4taGVpZ2h0OiA0NzBweDtcbiAgbWF4LWhlaWdodDogNDcwcHg7XG4gIG92ZXJmbG93OiBzY3JvbGw7XG59XG5cbi5tZXNzYWdlLWRhdGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogNXB4O1xuICByaWdodDogNXB4O1xuICBmb250LXNpemU6IDAuN3JlbTtcbn1cblxuLm5ldy1kYXkge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5uZXctZGF5OjpiZWZvcmUsIC5uZXctZGF5OjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGhlaWdodDogMXB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiA0MCU7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC43KTtcbiAgbWFyZ2luOiAwIDElO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufSJdfQ== */\"","import { SocketService } from './../socket.service';\nimport { ChatService } from './../chat.service';\nimport { Component, OnInit } from '@angular/core';\nimport { formatDate } from '@angular/common';\n\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-chatroom',\n  templateUrl: './chatroom.component.html',\n  styleUrls: ['./chatroom.component.scss'],\n})\nexport class ChatroomComponent implements OnInit {\n  messageForm = new FormGroup({\n    message: new FormControl('', [Validators.required])\n  });\n\n  fullDates = [];\n  loading = false;\n\n  count: string;\n  messages = [];\n  chatContent = '';\n  user;\n\n  constructor(private chatService: ChatService, private router: Router, private socketService: SocketService) {\n    // this.socketService.connectSocket();\n  }\n\n  ngOnInit() {\n    this.user = this.chatService.getUserInfo(true);\n    /* this.messages = [\n    {datechange: '2019-08-10T08:11:56.012Z'},\n    {msg: 'kjhbkjh10', username: 'anand', date: '2019-08-10T08:04:28.527Z'},\n    {msg: 'kjhbkjh10', username: 'anand', date: '2019-08-10T08:04:28.527Z'},\n    {datechange: '2019-08-12T08:11:56.012Z'},\n    {msg: 'kjhbkjh12', username: 'anand', date: '2019-08-12T08:04:28.527Z'}]; */\n    console.log(this.user);\n    this.subscribeSocketEvents();\n  }\n\n  sendMessage() {\n    if (this.messageForm.valid) {\n      this.loading = true;\n      const message = this.messageForm.get('message').value;\n      console.log(message);\n      this.socketService.sendMessage('newMessage', message);\n      this.loading = false;\n    }\n  }\n\n  checkValid() {\n    if (!this.messageForm.valid || this.messageForm.get('message').value.trim() === '') {\n      return true;\n    }\n    return false;\n  }\n\n  sendLocation() {\n    if (!navigator.geolocation) {\n      return alert('You browser does not support geolocation');\n    }\n    this.loading = true;\n    navigator.geolocation.getCurrentPosition(position => {\n      const lat = position.coords.latitude;\n      const long = position.coords.longitude;\n      console.log(position);\n      this.socketService.sendMessage('sendLocation', {lat, long});\n      this.loading = false;\n    });\n  }\n\n  subscribeSocketEvents() {\n    this.socketService.onNewMessage().subscribe(message => {\n      console.log(this.messages);\n      const date = formatDate(new Date(), 'mediumDate', 'en');\n      const found = this.fullDates.indexOf(date);\n      if (found === -1) {\n        this.messages.push({datechange: message.date});\n        this.fullDates.push(date);\n      }\n      this.messages.push(message);\n      this.messageForm.reset();\n    });\n    this.socketService.onNewClient().subscribe((mesg) => {\n      const joined = mesg;\n      this.messages.push({joined});\n    });\n    this.socketService.onClientDisconnect().subscribe((mesg) => {\n      const left = mesg;\n      this.messages.push({left});\n    });\n  }\n\n  logout() {\n    this.socketService.logout();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ChatService } from '../chat.service';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  loader = false;\n  errorMessage: string;\n  forgotForm: FormGroup = new FormGroup({\n    email: new FormControl('', Validators.required)\n  });\n\n  forgotValidations = {\n    email: [{\n      type: 'required',\n      message: 'Email is required'\n    }]\n  };\n  constructor(private chatService: ChatService, private apiService: ApiService) { }\n\n  ngOnInit() {\n  }\n\n  isInvalid(control: string) {\n    return this.chatService.isInvalid(this.forgotForm, control);\n  }\n\n  getErrors(formcontrol: string) {\n    return this.chatService.getErrors(\n      formcontrol,\n      this.forgotForm,\n      this.forgotValidations\n    );\n  }\n\n  sendMail() {\n    if (this.forgotForm.valid) {\n      const email = this.forgotForm.value.email;\n      this.forgotForm.disable();\n      this.apiService.forgotPass(email).subscribe(res => {\n        this.errorMessage = res.message;\n      }, err => this.errorMessage = this.chatService.showResponseError(err)).add(() => {\n        this.forgotForm.enable();\n      });\n    } else {\n      this.chatService.markFieldsAsDirty(this.forgotForm);\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { ApiService } from '../api.service';\nimport { ChatService } from './../chat.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private chatService: ChatService, private apiService: ApiService) { }\n\n  ngOnInit() {\n  }\n\n  isLoggedIn() {\n    return this.chatService.isLoggedIn();\n  }\n\n  logout() {\n    this.apiService.logout();\n  }\n\n}\n","module.exports = \".joinbox {\\n  box-shadow: 3px 4px 15px -2px rgba(0, 0, 0, 0.75);\\n  padding: 30px 20px;\\n  background: #85dbf5;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy91bWVzaGNoYXVoYW4vRG9jdW1lbnRzL25vZGVzYW5kYm94L2FuZ3VsYXItc29ja2V0L3NyYy9hcHAvam9pbmNoYXQvam9pbmNoYXQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2pvaW5jaGF0L2pvaW5jaGF0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBR0UsaURBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9qb2luY2hhdC9qb2luY2hhdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5qb2luYm94IHtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiAzcHggNHB4IDE1cHggLTJweCByZ2JhKDAsMCwwLDAuNzUpO1xuICAtbW96LWJveC1zaGFkb3c6IDNweCA0cHggMTVweCAtMnB4IHJnYmEoMCwwLDAsMC43NSk7XG4gIGJveC1zaGFkb3c6IDNweCA0cHggMTVweCAtMnB4IHJnYmEoMCwwLDAsMC43NSk7XG4gIHBhZGRpbmc6IDMwcHggMjBweDtcbiAgYmFja2dyb3VuZDogIzg1ZGJmNTtcbn1cbiIsIi5qb2luYm94IHtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiAzcHggNHB4IDE1cHggLTJweCByZ2JhKDAsIDAsIDAsIDAuNzUpO1xuICAtbW96LWJveC1zaGFkb3c6IDNweCA0cHggMTVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC43NSk7XG4gIGJveC1zaGFkb3c6IDNweCA0cHggMTVweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC43NSk7XG4gIHBhZGRpbmc6IDMwcHggMjBweDtcbiAgYmFja2dyb3VuZDogIzg1ZGJmNTtcbn0iXX0= */\"","import { SocketService } from './../socket.service';\nimport { ChatService } from './../chat.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-joinchat',\n  templateUrl: './joinchat.component.html',\n  styleUrls: ['./joinchat.component.scss']\n})\nexport class JoinchatComponent implements OnInit, OnDestroy {\n  error = false;\n  errMsg = '';\n  errTimeout = 4000;\n  username = '';\n  joinFormGroup = new FormGroup({\n    room: new FormControl('one', [Validators.required]),\n  });\n  errSubscription: Subscription;\n\n  joinValidations = {\n    room: [\n      {\n        type: 'required',\n        message: 'Room Selection is required'\n      }\n    ]\n  };\n\n  constructor(private router: Router, private chatService: ChatService, private socketService: SocketService) {\n    // this.socketService.connectSocket();\n   }\n\n  ngOnInit() {\n    // this.chatService.clearUser();\n    this.username = this.chatService.getUserInfo().username;\n    console.log(this.username);\n    this.errMsg = this.chatService.getRouteErrorMsg();\n    if (this.errMsg) {\n      this.error = true;\n    }\n    this.errSubscription = this.chatService.getErrorMsg().subscribe(msg => {\n      console.log('msg', msg);\n\n      this.errMsg = msg;\n      // if (this.errMsg) {\n      this.error = true;\n      setTimeout(() => {\n        this.error = false;\n      }, this.errTimeout);\n      // }\n    });\n  }\n\n  ngOnDestroy() {\n    this.errSubscription.unsubscribe();\n  }\n\n  joinRoom() {\n    if (this.joinFormGroup.valid) {\n      const user = this.joinFormGroup.value;\n      user.username = this.username;\n      this.chatService.setUserInfo(user, true);\n      this.socketService.connectNewClient(user);\n    } else {\n      this.chatService.markFieldsAsDirty(this.joinFormGroup);\n    }\n\n  }\n\n  getErrors(formcontrol: string) {\n    return this.chatService.getErrors(formcontrol, this.joinFormGroup, this.joinValidations);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { ApiService } from '../api.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport jwt_decode from 'jwt-decode';\nimport { Router } from '@angular/router';\nimport { ChatService } from './../chat.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  error = false;\n  errMsg = '';\n  loader = false;\n  errTimeout = 4000;\n  errorMessage: string;\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required])\n  });\n  loginValidations = {\n    email: [\n      {\n        type: 'required',\n        message: 'Email is required'\n      },\n      {\n        type: 'email',\n        message: 'Invalid Email'\n      }\n    ],\n    password: [\n      {\n        type: 'required',\n        message: 'Password is required'\n      }\n    ]\n  };\n\n  constructor(private chatService: ChatService, private apiService: ApiService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.errMsg = this.chatService.getRouteErrorMsg();\n    if (this.errMsg) {\n      this.error = true;\n    }\n    const l = this.chatService.isLoggedIn();\n    console.log(l);\n\n    // this.errorMessage = this.authService.getErrorMessage();\n  }\n\n  getErrors(formcontrol: string) {\n    return this.chatService.getErrors(\n      formcontrol,\n      this.loginForm,\n      this.loginValidations\n    );\n  }\n\n  getInvalidCondition(formControl: string) {\n    return (\n      this.loginForm.get(formControl).invalid &&\n      this.loginForm.get(formControl).dirty\n    );\n  }\n\n  login() {\n    if (this.loginForm.valid) {\n      // return;\n      this.loader = true;\n      this.loginForm.disable();\n      this.apiService.login(this.loginForm.value).subscribe(\n        response => {\n          this.loader = false;\n          this.loginForm.enable();\n          const token = jwt_decode(response.token);\n          if (!token.active) {\n            this.errorMessage =\n              'Your account is not active. Please contact admin.';\n            return;\n          }\n          this.chatService.setUserInfo(token);\n          this.chatService.setInLocal('token', response.token);\n          console.log(token);\n          this.router.navigate(['/join']);\n          /* if (token.isAdmin) {\n            if (!token.isVerified) {\n              this.router.navigate(['admin/update-password']);\n            } else {\n              this.router.navigate(['/admin']);\n            }\n          } else {\n            if (!token.isVerified) {\n              this.router.navigate(['user/update-password']);\n            } else {\n            }\n          } */\n        },\n        error => {\n          this.loader = false;\n          this.loginForm.enable();\n          this.errorMessage = this.chatService.showResponseError(error);\n        }\n      );\n    } else {\n      this.chatService.markFieldsAsDirty(this.loginForm);\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { ApiService } from '../api.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, ValidatorFn } from '@angular/forms';\nimport { ChatService } from '../chat.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  loader = false;\n  errorMessage: string;\n  profileForm = new FormGroup(\n    {\n      username: new FormControl('', [Validators.required, Validators.minLength(5)]),\n      email: new FormControl({value: '', disabled: true}, [Validators.required, Validators.email]),\n      firstName: new FormControl('', [\n        Validators.required,\n        Validators.minLength(3)\n      ]),\n      lastName: new FormControl('', []),\n      /* password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(6)\n      ]),\n      confirmPassword: new FormControl('', [Validators.required]) */\n    },\n    {\n      validators: [/* this.mustMatch('password', 'confirmPassword'), */ this.uniqueUser('username')]\n    }\n  );\n  profileValidations = {\n    username: [\n      {\n        type: 'required',\n        message: 'Username is required'\n      },\n      {\n        type: 'unique',\n        message: 'Username already taken'\n      },\n      {\n        type: 'minlength',\n        message: 'Username must be atleast 5 characters long'\n      }\n    ],\n    email: [\n      {\n        type: 'required',\n        message: 'Email is required'\n      },\n      {\n        type: 'email',\n        message: 'Invalid Email'\n      }\n    ],\n    firstName: [\n      {\n        type: 'required',\n        message: 'First Name is required'\n      },\n      {\n        type: 'minlength',\n        message: 'First Name must be atleast 3 characters long'\n      }\n    ],\n    password: [\n      {\n        type: 'required',\n        message: 'Password is required'\n      },\n      {\n        type: 'minlength',\n        message: 'Password must be atleast 8 characters long'\n      }\n    ],\n    confirmPassword: [\n      {\n        type: 'required',\n        message: 'Confirm Password is required'\n      },\n      {\n        type: 'mustMatch',\n        message: 'Password and Confirm Password must match'\n      }\n    ]\n  };\n\n  constructor(private chatService: ChatService, private apiService: ApiService, private router: Router) {}\n\n  ngOnInit() {\n    this.setUserValues();\n  }\n\n  setUserValues() {\n    this.apiService.getUserDetails().subscribe(res => {\n      const controlkeys  = {username: 'username', email: 'email', firstName: 'firstName', lastName: 'lastName'};\n      if (res.data.username !== '') {\n        this.profileForm.controls[controlkeys.username].setValue(res.data.username);\n      }\n      this.profileForm.controls[controlkeys.email].setValue(res.data.email);\n      this.profileForm.controls[controlkeys.firstName].setValue(res.data.firstName);\n      this.profileForm.controls[controlkeys.lastName].setValue(res.data.lastName);\n    }, err => {\n      console.log(err);\n      this.errorMessage = this.chatService.showResponseError(err);\n    });\n  }\n\n  uniqueUser(userInput: string): ValidatorFn {\n    return (formGroup: FormGroup): ValidatorFn => {\n      const usernameControl = formGroup.controls[userInput];\n\n      if (usernameControl.errors && !usernameControl.errors.unique) {\n        // return if another validator has already found an error on the usernameControl\n        return;\n      }\n\n      this.apiService.checkIfUserExists(usernameControl.value).subscribe(res => {\n        // set error on usernameControl if user exists\n        if (res.exists ) {\n          usernameControl.setErrors({ unique: true });\n        } else {\n          usernameControl.setErrors(null);\n        }\n      }, err => console.log(err));\n    };\n  }\n\n  mustMatch(controlName: string, matchingControlName: string): ValidatorFn {\n    return (formGroup: FormGroup): ValidatorFn => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n        // return if another validator has already found an error on the matchingControl\n        return;\n      }\n\n      // set error on matchingControl if validation fails\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({ mustMatch: true });\n      } else {\n        matchingControl.setErrors(null);\n      }\n    };\n  }\n\n  getErrors(formcontrol: string) {\n    return this.chatService.getErrors(\n      formcontrol,\n      this.profileForm,\n      this.profileValidations\n    );\n  }\n\n  getInvalidCondition(formControl: string) {\n    return (\n      this.profileForm.get(formControl).invalid &&\n      this.profileForm.get(formControl).dirty\n    );\n  }\n\n  updateProfile() {\n    if (this.profileForm.valid) {\n      console.log(this.profileForm.value);\n      this.loader = true;\n      this.profileForm.disable();\n      this.apiService.updateProfile(this.profileForm.value).subscribe(\n        res => {\n          this.loader = false;\n          this.profileForm.enable();\n          const user = this.chatService.getUserInfo();\n          user.username = res.data.username;\n          this.chatService.setUserInfo(user);\n          this.router.navigate(['/join']);\n        },\n        error => {\n          this.loader = false;\n          this.profileForm.enable();\n          this.errorMessage = this.chatService.showResponseError(error);\n        }\n      );\n    } else {\n      this.chatService.markFieldsAsDirty(this.profileForm);\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'recentDate'\n})\nexport class RecentDatePipe implements PipeTransform {\n\n  transform(value: any): any {\n    const msgDate = new Date(value).getTime();\n    const currentDate = new Date().getTime();\n    const bal = (currentDate - msgDate) / (1000 * 60 * 60 * 24); // get diff in days\n    if (bal < 1) {\n      return 'Today';\n    } else if (bal < 2) {\n      return 'Yesterday';\n    } else {\n      return value;\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { ApiService } from '../api.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, ValidatorFn } from '@angular/forms';\nimport jwt_decode from 'jwt-decode';\nimport { Router } from '@angular/router';\nimport { ChatService } from './../chat.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  loader = false;\n  errorMessage: string;\n  registerForm = new FormGroup(\n    {\n      email: new FormControl('', [Validators.required, Validators.email]),\n      firstName: new FormControl('', [\n        Validators.required,\n        Validators.minLength(3)\n      ]),\n      lastName: new FormControl('', []),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(6)\n      ]),\n      confirmPassword: new FormControl('', [Validators.required])\n    },\n    {\n      validators: this.mustMatch('password', 'confirmPassword')\n    }\n  );\n  registerValidations = {\n    email: [\n      {\n        type: 'required',\n        message: 'Email is required'\n      },\n      {\n        type: 'email',\n        message: 'Invalid Email'\n      }\n    ],\n    firstName: [\n      {\n        type: 'required',\n        message: 'First Name is required'\n      },\n      {\n        type: 'minlength',\n        message: 'First Name must be atleast 3 characters long'\n      }\n    ],\n    password: [\n      {\n        type: 'required',\n        message: 'Password is required'\n      },\n      {\n        type: 'minlength',\n        message: 'Password must be atleast 8 characters long'\n      }\n    ],\n    confirmPassword: [\n      {\n        type: 'required',\n        message: 'Confirm Password is required'\n      },\n      {\n        type: 'mustMatch',\n        message: 'Password and Confirm Password must match'\n      }\n    ]\n  };\n\n  constructor(private chatService: ChatService, private router: Router, private apiService: ApiService) {}\n\n  ngOnInit() {\n  }\n\n  mustMatch(controlName: string, matchingControlName: string): ValidatorFn {\n    return (formGroup: FormGroup): ValidatorFn => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n        // return if another validator has already found an error on the matchingControl\n        return;\n      }\n\n      // set error on matchingControl if validation fails\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({ mustMatch: true });\n      } else {\n        matchingControl.setErrors(null);\n      }\n    };\n  }\n\n  getErrors(formcontrol: string) {\n    return this.chatService.getErrors(\n      formcontrol,\n      this.registerForm,\n      this.registerValidations\n    );\n  }\n\n  getInvalidCondition(formControl: string) {\n    return (\n      this.registerForm.get(formControl).invalid &&\n      this.registerForm.get(formControl).dirty\n    );\n  }\n\n  register() {\n    if (this.registerForm.valid) {\n      // return;\n      this.loader = true;\n      this.registerForm.disable();\n      this.apiService.register(this.registerForm.value).subscribe(\n        response => {\n          this.loader = false;\n          this.registerForm.enable();\n          const token = jwt_decode(response.token);\n          if (!token.active) {\n            this.errorMessage =\n              'Your account is not active. Please contact admin.';\n            return;\n          }\n          this.chatService.setUserInfo(token);\n          this.chatService.setInLocal('token', response.token);\n          this.router.navigate(['/verify']);\n        },\n        error => {\n          this.loader = false;\n          this.registerForm.enable();\n          this.errorMessage = this.chatService.showResponseError(error);\n        }\n      );\n    } else {\n      this.chatService.markFieldsAsDirty(this.registerForm);\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2V0LXBhc3N3b3JkL3Jlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ChatService } from '../chat.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n  loader = false;\n  success = false;\n  errorMessage: string;\n  resetPasswordForm: FormGroup = this.fb.group({\n    password: ['', [\n      Validators.required,\n      Validators.minLength(8)\n    ]],\n    confirmPassword: ['', [Validators.required]],\n    token: ['', Validators.required]\n  },\n  {\n    validators: this.validateService.mustMatch('password', 'confirmPassword')\n  });\n  resetPasswordValidations = {\n    password: [\n      {\n        type: 'required',\n        message: 'Password is required'\n      },\n      {\n        type: 'minlength',\n        message: 'Password must have a minimum length of 8 characters'\n      }\n    ],\n    confirmPassword: [\n      {\n        type: 'required',\n        message: 'Confirm Password is required'\n      },\n      {\n        type: 'mustMatch',\n        message: 'Confirm Password must match Password'\n      }\n    ]\n  };\n  constructor(\n    private fb: FormBuilder,\n    private validateService: ChatService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n    const token = this.activatedRoute.snapshot.queryParams.token;\n    if (token === undefined || token === '') {\n      this.router.navigate(['/forgot-password']);\n    } else {\n      this.resetPasswordForm.controls.token.setValue(token);\n    }\n  }\n\n  getErrors(controlName: string) {\n    return this.validateService.getErrors(controlName, this.resetPasswordForm, this.resetPasswordValidations);\n  }\n\n  isInvalid(controlName: string): boolean {\n    return this.validateService.isInvalid(this.resetPasswordForm, controlName);\n  }\n\n  resetPassword() {\n    if (this.resetPasswordForm.valid) {\n      const body = this.resetPasswordForm.value;\n      delete body.confirmPassword;\n      console.log(body);\n      this.resetPasswordForm.disable();\n      /* this.apiService.resetPassword(body).subscribe(res => {\n        this.successMessage = res.message;\n        console.log(res);\n        setTimeout(() => {\n          this.router.navigateByUrl('/');\n        }, 3000);\n      }, err => {\n        console.log(err);\n        this.errorMessage = this.apiService.showResponseError(err);\n        if (this.errorMessage === 'jwt expired') {\n          setTimeout(() => {\n            this.router.navigateByUrl('/forgot-password');\n          }, 3000);\n        }\n      }).add(() => this.resetPasswordForm.enable()); */\n    } else {\n      this.validateService.markFieldsAsDirty(this.resetPasswordForm);\n    }\n  }\n}\n","import { Router } from '@angular/router';\nimport { ChatService } from './chat.service';\nimport { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\n\nimport { environment } from 'src/environments/environment';\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n  socket: SocketIOClient.Socket;\n  socketUrl = environment.socketUrl;\n  isLoggedIn = false;\n\n  constructor(private chatService: ChatService, private router: Router) {\n    // this.socket = io.connect(this.socketUrl);\n    this.connectSocket();\n   }\n\n   connectSocket() {\n    this.socket = io.connect(this.socketUrl);\n   }\n\n   loggedIn(): boolean {\n    return this.isLoggedIn;\n   }\n\n   connectNewClient(user) {\n    console.log('here', this.socket);\n    if (this.socket.disconnected) {\n      this.socket.open();\n    }\n    this.socket.emit('join', user, (error) => {\n      console.log('called');\n      if (error) {\n        console.log(error);\n        this.chatService.setErrorMsg(error);\n        this.isLoggedIn = false;\n        this.router.navigate(['/']);\n        return;\n      }\n      this.router.navigate(['/chat']);\n      this.isLoggedIn = true;\n    });\n   }\n\n   sendMessage(key: string, message: string| object = '') { // message or location or logout\n    if (this.socket.disconnected) {\n      this.socket.open();\n    }\n    this.socket.emit(key, message);\n   }\n\n   onNewMessage() {\n    return new Observable((observer: Observer<any>) => {\n      this.socket.on('newMessage', (msg: string, username: string, date) => {\n        observer.next({msg, username, date});\n      });\n    });\n   }\n\n   onNewClient() {\n    return new Observable((observer: Observer<any>) => {\n      this.socket.on('newClient', (msg: string) => {\n        observer.next(msg);\n      });\n    });\n   }\n\n   onClientDisconnect() {\n    return new Observable((observer: Observer<any>) => {\n      this.socket.on('clientLeft', (msg: string) => {\n        observer.next(msg);\n      });\n    });\n   }\n\n   logout() {\n    this.sendMessage('logout');\n    this.socket.disconnect();\n    this.chatService.clearUser();\n    this.router.navigate(['/']);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZlcmlmeS1hY2NvdW50L3ZlcmlmeS1hY2NvdW50LmNvbXBvbmVudC5zY3NzIn0= */\"","import { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\nimport { Component, OnInit, /* Renderer2, ElementRef, ViewChild */ } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ChatService } from '../chat.service';\n\n@Component({\n  selector: 'app-verify-account',\n  templateUrl: './verify-account.component.html',\n  styleUrls: ['./verify-account.component.scss']\n})\nexport class VerifyAccountComponent implements OnInit {\n  // @ViewChild('resendButton', {static: false}) private resendButton: ElementRef;\n  errorMessage: string;\n  otpSent = false;\n  successMsg: string;\n  loader = false;\n  isResend = false;\n  resendTime = null;\n  verifyForm = new FormGroup({\n    otp: new FormControl('', [Validators.required, Validators.minLength(4)])\n  });\n  verifyValidations = {\n    otp: [\n      {\n        type: 'required',\n        message: 'OTP is required'\n      },\n      {\n        type: 'minlength',\n        message: 'OTP must be atleast 4 digits'\n      }\n    ]\n  };\n  constructor(\n    private chatService: ChatService,\n    private apiService: ApiService, /* private renderer: Renderer2, */ private router: Router) { }\n\n  ngOnInit() {\n    this.sendOtp();\n  }\n\n  setTimer() {\n    this.resendTime = new Date().setMinutes(2, 0, 0);\n    const timer = setInterval(() => {\n      const d = new Date(this.resendTime);\n      if (d.getMinutes() === 0 && d.getSeconds() === 1) {\n        this.isResend = true;\n        // this.resendButton.nativeElement.innerText = 'Resend'; <- never use this\n        this.resendTime = null;\n        // this.renderer.setProperty(this.resendButton.nativeElement, 'innerText', 'Resend');\n        clearInterval(timer);\n      } else {\n        this.resendTime = d.setSeconds(d.getSeconds() - 1 );\n      }\n    }, 1000);\n  }\n\n  sendOtp() {\n    this.isResend = false;\n    this.apiService.sendOtp().subscribe(res => {\n      this.successMsg = res.message;\n      this.otpSent = true;\n      if (res.attempt < 3) {\n        this.setTimer();\n      }\n    }, err => {\n      this.otpSent = true;\n      if (err.status === 400) {\n        this.resendTime = null;\n      } else {\n        this.isResend = true;\n      }\n      this.errorMessage = this.chatService.showResponseError(err);\n    });\n  }\n\n  getErrors(formcontrol: string) {\n    return this.chatService.getErrors(\n      formcontrol,\n      this.verifyForm,\n      this.verifyValidations\n    );\n  }\n\n  getInvalidCondition(formControl: string) {\n    return (\n      this.verifyForm.get(formControl).invalid &&\n      this.verifyForm.get(formControl).dirty\n    );\n  }\n\n  verifyOtp() {\n    if (this.verifyForm.valid) {\n      const otpInput = {\n        email: this.chatService.getUserInfo().email,\n        otp: this.verifyForm.value.otp\n      };\n      this.apiService.confirmOtp(otpInput).subscribe(res => {\n        this.successMsg = 'otp confirmed';\n        this.otpSent = false;\n        const user = this.chatService.getUserInfo();\n        user.isVerified = true;\n        this.chatService.setUserInfo(user);\n        this.router.navigateByUrl('/join');\n      }, err => {\n        this.otpSent = true;\n        this.errorMessage = this.chatService.showResponseError(err);\n      });\n    } else {\n      this.chatService.markFieldsAsDirty(this.verifyForm);\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  socketUrl: 'http://localhost:3000',\n  baseUrl: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}